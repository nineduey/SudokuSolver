Program performance analysis:

Can we get relaibly good solutions?
We can relaibly get a good solution, however the time it takes depends heavily on the population size. 

How many generations does it take?
With population 10 and 10% cull percentage, we see our program solve testcase 1 in between 10,000 and 25,000 generations.
With population 10 and 10% cull percentage, we see our program solve testcase 2 in between 80,000 - 150,000 generations

How does this depend on the how hard the puzzle is?
The puzzle seems to get exponentially longer to solve with each empty space, so harder puzzles usually take longer to solve
as they have more empty spaces.

Does adding additional genetic operators improve performance?
For performance towards solving the puzzle, we found that we were able to get close the more operators we added but 
would stop at some low number and wouldn't get to 0 for a solved puzzle. We later tried a simpler solution for the 
genetic algorithm and found more success and better performance.
